{
  "TrakSYS_Version": "12.0.0",
  "Name": "BACKUP Planned Sales Jobs",
  "AltName": "",
  "Description": "",
  "Notes": "",
  "Key": "DiscreteJobs",
  "IconCss": "",
  "NavigationIconCss": "",
  "NavigationTitle": "",
  "PageTitle": "",
  "RefreshSeconds": 0,
  "RefreshKeysEx": "PackRefresh",
  "IsHeaderVisible": 2,
  "IsTitleVisible": 2,
  "IsBreadcrumbsVisible": 2,
  "SidebarMode": 2,
  "CssMode": 1,
  "IsSpokesVisible": 2,
  "IsVisibleInNavigation": false,
  "InstanceType": 0,
  "InstanceScript": "",
  "ValueScript": "",
  "Css": "",
  "Js": "",
  "ContentMode": 0,
  "ContentKey": "",
  "ContentView": "<Content><Row ID=\"R1\"><Col ID=\"R1C1\" Width=\"12\" /></Row><Row ID=\"R2\"><ColFixedLeft ID=\"R2C1\" Width=\"200\" CssClassExtra=\"\" CardMode=\"2\" CardModeKey=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Part ID=\"headerFilters\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Filters\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 2\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"glyphicon-filter\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"datePicker\" Key=\"ETS.Filters.TsFilterDateTimeRange\"><Parameters><![CDATA[{\r\n  \"StartCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Start Date\"\r\n  },\r\n  \"EndCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"End Date\"\r\n  },\r\n  \"InitialStartDateTime\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"today\"\r\n  },\r\n  \"InitialEndDateTime\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"today + 5\"\r\n  },\r\n  \"IsReadOnly\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"InputMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"TargetKeyPrefix\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Filter0\" Key=\"ETS.Filters.TsFilterDropDown\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Product\"\r\n  },\r\n  \"TargetKeySelectedValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"cmbProduct\"\r\n  },\r\n  \"SelectedValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"TargetKeyAdditionalValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"12\"\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"4\"\r\n  },\r\n  \"ExtraOption\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"ExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"AdditionalExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"AutoRefresh\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"false\"\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.Products\"\r\n  },\r\n  \"DataValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{r:Value}\"\r\n  },\r\n  \"DataTextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{r:DisplayName}\"\r\n  },\r\n  \"DataAdditionalValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"btnRefresh\" Key=\"ETS.Filters.TsRefreshButton\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Refresh\"\r\n  },\r\n  \"Css\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"btn-default\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"UrlEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part></ColFixedLeft><Col ID=\"R2C2\" Width=\"12\" CssClassExtra=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" CardMode=\"2\" CardModeKey=\"\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Row ID=\"R2C2R1\"><Col ID=\"R2C2R1C1\" Width=\"12\"><Part ID=\"headerBatchJobs\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Planned Jobs for Packaging\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"fa-bullseye\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></Col></Row><Row ID=\"R2C2R2\"><Col ID=\"R2C2R2C1\" Width=\"6\" /><Col ID=\"R2C2R2C2\" Width=\"6\" /></Row><Row ID=\"R2C2R3\"><Col ID=\"R2C2R3C1\" Width=\"12\"><Part ID=\"tableBatchJobs\" Key=\"ETS.Lists.TsTable\"><Parameters><![CDATA[{\r\n  \"ColumnsJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Job Name\\\",\\r\\n    \\\"ContentEx\\\": \\\"{JobName}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Job State\\\",\\r\\n    \\\"ContentEx\\\": \\\"{JobState}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Customer\\\",\\r\\n    \\\"ContentEx\\\": \\\"{CustomerName}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Planned Start\\\",\\r\\n    \\\"ContentEx\\\": \\\"{StartTime:dd-MM-yyyy HH:mm:ss}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Product Name\\\",\\r\\n    \\\"ContentEx\\\": \\\"{ProductName}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Product Stock\\\",\\r\\n    \\\"ContentEx\\\": \\\"{StockStatus}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"RowCssClassExtraEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"StatesJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Field\\\": \\\"JobState\\\",\\r\\n    \\\"ValueEx\\\": \\\"In Progress\\\",\\r\\n    \\\"IconCss\\\": \\\"fa fa-spinner fa-spin\\\",\\r\\n    \\\"Color\\\": \\\"-9649844\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Field\\\": \\\"JobState\\\",\\r\\n    \\\"ValueEx\\\": \\\"Complete\\\",\\r\\n    \\\"IconCss\\\": \\\"\\\",\\r\\n    \\\"Color\\\": \\\"-4869454\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Field\\\": \\\"JobState\\\",\\r\\n    \\\"ValueEx\\\": \\\"Behind\\\",\\r\\n    \\\"IconCss\\\": \\\"\\\",\\r\\n    \\\"Color\\\": \\\"-65536\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"RowIconCssEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{IconCss[]}\"\r\n  },\r\n  \"RowColorEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Color[]}\"\r\n  },\r\n  \"AnchorNameEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ButtonsJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Start\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"ButtonTypeCssEx\\\": \\\"\\\",\\r\\n    \\\"EnabledEx\\\": \\\"{EnableJobStart[0]}\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IsPopupMenu\\\": false,\\r\\n    \\\"IconCssEx\\\": \\\"fa-play\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"StartDiscreteJob\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Order Product\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"ButtonTypeCssEx\\\": \\\"\\\",\\r\\n    \\\"EnabledEx\\\": \\\"{IsInStock[0]}\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IsPopupMenu\\\": false,\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"OrderProduction\\\",\\r\\n    \\\"ConfirmEnabled\\\": true,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"Production Order for the needed product will be made\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"RowUrlEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"self:?JobID={JobID}\"\r\n  },\r\n  \"RowOnClientClickEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"RowOnServerClick\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ConfirmEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"ConfirmCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ConfirmMessageEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"WindowTargetEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SplashMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldUseDataSourceSelectedIndex\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"WordWrap\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"RowEnabledEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"TopN\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.BatchJobs\"\r\n  },\r\n  \"DataDashJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></Col></Row></Col><ColFixedRight ID=\"R2C3\" Width=\"200\" CssClassExtra=\"\" CardMode=\"2\" CardModeKey=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Part ID=\"headerDetails\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{data.BatchJobs.Selected.JobName[No Available Jobs]}\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"0\"\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"glyphicon-info-sign\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"menuDetails\" Key=\"ETS.TsMenu\"><Parameters><![CDATA[{\r\n  \"Layout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"ItemJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Start Job\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"EnabledEx\\\": \\\"{data.BatchJobs.Selected.EnableJobStart}\\\",\\r\\n    \\\"VisibleEx\\\": \\\"{data.BatchJobs.HasData}\\\",\\r\\n    \\\"IconCssEx\\\": \\\"glyphicon-play\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"./startBatch?JobID={JobID}\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SelectedMenuItem\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"detailsBatch\" Key=\"ETS.TsDetails\"><Parameters><![CDATA[{\r\n  \"Layout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"ItemJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Job ID\\\",\\r\\n    \\\"ContentEx\\\": \\\"{data.BatchJobs.Selected.JobID}\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Job Name\\\",\\r\\n    \\\"ContentEx\\\": \\\"{data.BatchJobs.Selected.JobName}\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Job State\\\",\\r\\n    \\\"ContentEx\\\": \\\"{data.BatchJobs.Selected.JobState}\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Planned Start\\\",\\r\\n    \\\"ContentEx\\\": \\\"{data.BatchJobs.Selected.StartTime:MMM dd H:mm}\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Duration\\\",\\r\\n    \\\"ContentEx\\\": \\\"{data.BatchJobs.Selected.Duration:span:duration}\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Product Name\\\",\\r\\n    \\\"ContentEx\\\": \\\"{data.BatchJobs.Selected.ProductName}\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"data.BatchJobs.HasData\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></ColFixedRight></Row><Row ID=\"R3\"><ColFixedLeft ID=\"R3C1\" Width=\"200\"><Part ID=\"dataProducts\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"1\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Name\\\": \\\"sysID\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"-1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"SystemID\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT DISTINCT p.ID [Value]\\r\\n, p.Name [DisplayName]\\r\\nFROM tRecipe r\\r\\nJOIN tProduct p\\r\\nON r.ProductID = p.ID\\r\\nWHERE SystemID = 6\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.Products\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part><Part ID=\"dataStatus\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"1\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT 0 [Value], '[ All ]' [DisplayName]\\r\\nUNION SELECT 1, 'Hide Completed'\\r\\n\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.Status\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></ColFixedLeft><Col ID=\"R3C2\" Width=\"12\" CssClassExtra=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\"><Part ID=\"dataBatchJobs\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"3\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Name\\\": \\\"SID\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"6\\\",\\r\\n    \\\"ValuesKey\\\": \\\"SystemID\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"PID\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"cmbProduct\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"SDT\\\",\\r\\n    \\\"SqlDataType\\\": \\\"datetime\\\",\\r\\n    \\\"DefaultValue\\\": \\\"today\\\",\\r\\n    \\\"ValuesKey\\\": \\\"SDT\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"EDT\\\",\\r\\n    \\\"SqlDataType\\\": \\\"datetime\\\",\\r\\n    \\\"DefaultValue\\\": \\\"today + 1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"EDT\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"HideComplete\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"cmbStatus\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT DISTINCT\\r\\n    j.[ID] [JobID],\\r\\n    j.Name [JobName],\\r\\n    j.PlannedStartDateTime [StartTime],\\r\\n    j.PlannedDurationSeconds [Duration],\\r\\n    p.Name [ProductName],\\r\\n    d.PlannedProductionCount [DiscreteCount],\\r\\n    d.PlannedProductionCountUnits [DiscreteCountUnits],\\r\\n    d.PlannedCalculationCount [DiscretePlannedCount],\\r\\n    d.PlannedCalculationCountUnits [DiscretePlannedCountUnits],\\r\\n    s.Name [SystemName],\\r\\n    CASE \\r\\n        WHEN jsa.StartDateTime IS NULL AND j.PlannedStartDateTime < SYSDATETIMEOFFSET() THEN 'Behind'\\r\\n        WHEN jsa.StartDateTime IS NULL AND j.PlannedStartDateTime >= SYSDATETIMEOFFSET() THEN 'In Queue'\\r\\n        WHEN jsa.StartDateTime IS NOT NULL AND jsa.EndDateTime IS NULL THEN 'In Progress'\\r\\n        WHEN jsa.StartDateTime IS NOT NULL AND jsa.EndDateTime IS NOT NULL THEN 'Complete'\\r\\n    END [JobState],\\r\\n    j.[ID] [GroupValue],\\r\\n    j.Name [GroupLabel],\\r\\n    1 [GroupDisplayOrder],\\r\\n    j.PlannedStartDateTime [ValueStart],\\r\\n    DATEADD(SECOND, j.plannedDurationSeconds, j.PlannedStartDateTime) [ValueEnd],\\r\\n    j.PlannedDurationSeconds [ValueDifference],\\r\\n    NULL [ValueID],\\r\\n    1 [ValueGroupID],\\r\\n    1 [ValueGroupNumber],\\r\\n    -16738340 [ValueGroupColor],\\r\\n    CASE\\r\\n        WHEN jsa.StartDateTime IS NULL AND j.Capture08 = 'In Stock' THEN 1\\r\\n        ELSE 0\\r\\n    END [EnableJobStart],\\r\\n    jt.Color,\\r\\n    jt.IconCss,\\r\\n    CASE\\r\\n        WHEN j.Capture08 = 'Out of Stock' THEN 1\\r\\n        ELSE 0\\r\\n    END [IsInStock],\\r\\n    j.Capture08 [StockStatus],\\r\\n    c.Name AS CustomerName -- Adding the Customer Name column from _customer table\\r\\n\\r\\nFROM \\r\\n    tJob j\\r\\nLEFT JOIN \\r\\n    tJobType jt ON j.JobTypeID = 2\\r\\nJOIN \\r\\n    tJobDiscrete d ON j.ID = d.JobID\\r\\nJOIN \\r\\n    tProduct p ON j.ProductID = p.ID\\r\\nJOIN \\r\\n    tJobSystemPlanned jsp ON jsp.JobID = d.JobID\\r\\nJOIN \\r\\n    tSystem s ON jsp.SystemID = s.ID\\r\\nLEFT JOIN \\r\\n    tJobSystemActual jsa ON jsa.JobID = j.ID\\r\\nLEFT JOIN \\r\\n    _customer c ON j.Capture01 = c.ID -- Joining tJob with _customer using Capture01 foreign key\\r\\nWHERE \\r\\n    s.ID = 6\\r\\n    AND @PID IN (-1, p.ID)\\r\\n    AND j.PlannedStartDateTime BETWEEN @SDT AND @EDT\\r\\n    AND (jsa.EndDateTime IS NULL OR @HideComplete = 0)\\r\\nORDER BY \\r\\n    j.PlannedStartDateTime;\\r\\n\\r\\n\\r\\nUPDATE tJob\\r\\nSET Capture08 = \\r\\n  CASE \\r\\n    WHEN EXISTS (SELECT 1 FROM tItem WHERE ProductID = 1 AND LocationID = 19) THEN 'In Stock'\\r\\n    ELSE 'Out of Stock'\\r\\n  END\\r\\nWHERE Capture09 = '1';\\r\\n\\r\\nUPDATE tJob\\r\\nSET Capture08 = \\r\\n  CASE \\r\\n    WHEN EXISTS (SELECT 1 FROM tItem WHERE ProductID = 2 AND LocationID = 17) THEN 'In Stock'\\r\\n    ELSE 'Out of Stock'\\r\\n  END\\r\\nWHERE Capture09 = '2';\\r\\n\\r\\nUPDATE tJob\\r\\nSET Capture08 = \\r\\n  CASE \\r\\n    WHEN EXISTS (SELECT 1 FROM tItem WHERE ProductID = 3 AND LocationID = 18) THEN 'In Stock'\\r\\n    ELSE 'Out of Stock'\\r\\n  END\\r\\nWHERE Capture09 = '3';\\r\\n\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.BatchJobs\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"JobID\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"JobID\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></Col><ColFixedRight ID=\"R3C3\" Width=\"200\" /></Row></Content>",
  "ContentCode": "using System;\r\nusing System.Collections.Generic;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing System.Web.ModelBinding;\r\nusing System.Web.UI.DataVisualization.Charting;\r\nusing ETS.Core.Api;\r\nusing ETS.Core.Api.Models;\r\nusing ETS.Core.Api.Models.Data;\r\nusing ETS.Core.Enums;\r\nusing ETS.Core.Extensions;\r\nusing ETS.Core.Services.Resource;\r\nusing ETS.Ts.Core.ContentParts;\r\nusing ETS.Ts.Core.Enums;\r\nusing ETS.Ts.Core.Scripting;\r\n\r\nnamespace ETS.Ts.Content\r\n{\r\n  /// ***********************************************************\r\n  public partial class DiscreteJobs : ContentPageBase\r\n  {\r\n    /// Automatically map the decorated property to incoming Ets.Values data (typically QueryString variables).\r\n    /// The name of the property is used as the Key in accessing the Ets.Values collection during mapping.\r\n    [ValuesProperty()]\r\n    public int SystemID { get; set; } = 6;\r\n\r\n    [ValuesProperty()]\r\n    public int JobID { get; set; } = -1;\r\n\r\n    public DbSystem _sys;\r\n    DbMaterial _material;\r\n\r\n    // ***********************************************************\r\n    protected override bool ContentPage_Init()\r\n    {\r\n      this.Page.Trace.IsEnabled = true;\r\n      this.Ets.Values[\"JobID\"] = this.Ets.Values.GetAsInt(\"data.BatchJobs.Selected.JobID\");\r\n\r\n      _sys = this.Ets.Api.Data.DbSystem.Load.ByID(this.SystemID).ThrowIfLoadFailed(\"ID\", this.SystemID);\r\n\r\n      this.Ets.Values[\"System.Name\"] = _sys.Name;\r\n      this.Ets.Values[\"Red.Button.HasNoData\"] = false;\r\n\r\n      return true;\r\n    }\r\n\r\n    // ***********************************************************\r\n    protected override bool ContentPage_PartPreInit10()\r\n    {\r\n      // this.Ets.Values[\"JobID\"] = this.Ets.Values.GetAsInt(\"data.BatchJobs.Selected.JobID\");\r\n      return true;\r\n    }\r\n\r\n    private void StartDiscreteJob(object sender, RowItemEventArgs e)\r\n    {\r\n\r\n      // Get instance of api service\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n\r\n      // Get the selected job's ID\r\n      int jobID = e.GetInteger(\"JobID\");\r\n      JobID = jobID;\r\n\r\n      DbJobDiscreteComposite _job = this.Ets.Api.Data.DbJobDiscreteComposite.Load.ByID(JobID).ThrowIfLoadFailed(\"JobID\", this.JobID);\r\n      DbJob _job2 = this.Ets.Api.Data.DbJob.Load.ByID(JobID).ThrowIfLoadFailed(\"JobID\", this.JobID);\r\n      this.Ets.Values[\"Job.Name\"] = _job.Name;\r\n\r\n      Trace.Write(\"The integer jobID's Value is: \" + jobID);\r\n\r\n      var uow = this.Ets.Api.CreateUnitOfWork();\r\n      var product = this.Ets.Api.Data.DbProduct.Load.ByID(_job.ProductID).ThrowIfLoadFailed(\"Job.ProductID\", _job.ProductID);\r\n\r\n      Trace.Write(\"Tags have not been changed.\");\r\n      // Load the material based on RecipeID\r\n      // Declare a list object to store items\r\n      List<ETS.Core.Api.Models.Data.DbItem> items = new List<ETS.Core.Api.Models.Data.DbItem>();\r\n\r\n      // Load the list of items from the database\r\n      items = api.Data.ListOf.DbItems.GetList.WithSql(\"SELECT * FROM tItem\");\r\n\r\n      // Define a list of LocationIDs that you want to check (7, 8, and 9 in this case)\r\n\r\n      if (_job2.ProductID == 8)\r\n      {\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(3).ThrowIfLoadFailed(\"ID\", _job2.ProductID);\r\n        // Find the items that match the MaterialID and LocationIDs in items list\r\n        int locationIDsToCheck = 19;\r\n        var matchingItems = items.Where(i => i.MaterialID == _material.ID && locationIDsToCheck == i.LocationID);\r\n        this.Ets.Api.Tags.UpdateVirtualTagByID(416, 1, uow);\r\n\r\n        // Find the item with the lowest ID among the matching items\r\n        var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n        if (itemWithLowestID != null)\r\n        {\r\n\r\n          itemWithLowestID.LocationID = 20;\r\n          itemWithLowestID.Attribute10 = _job2.Capture01;\r\n\r\n          api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n          ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n\r\n          itemLog.User = this.Ets.User.Login;\r\n          itemLog.ItemLogDefinitionID = 4;\r\n          itemLog.LogDateTime = this.Ets.SiteNow;\r\n          itemLog.Lot = itemWithLowestID.Lot;\r\n          itemLog.ItemID = itemWithLowestID.ID;\r\n          itemLog.ProductID = 8;\r\n          itemLog.Quantity = 1;\r\n          itemLog.LocationID = 20;\r\n          itemLog.JobID = JobID;\r\n          itemLog.SubLot = itemWithLowestID.Lot;\r\n          itemLog.Notes = \"Moved to pick up line\";\r\n          //itemLog.MaterialID = 3;\r\n          itemLog.Capture10 = itemWithLowestID.Attribute10;\r\n\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result2;\r\n\r\n          result2 = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n        }\r\n\r\n      }\r\n      if (_job2.ProductID == 9)\r\n      {\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(1).ThrowIfLoadFailed(\"ID\", _job2.ProductID);\r\n        int locationIDsToCheck = 18;\r\n        // Find the items that match the MaterialID and LocationIDs in items list\r\n        var matchingItems = items.Where(i => i.MaterialID == _material.ID && locationIDsToCheck == i.LocationID);\r\n        this.Ets.Api.Tags.UpdateVirtualTagByID(413, 1, uow);\r\n        // Find the item with the lowest ID among the matching items\r\n        var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n        if (itemWithLowestID != null)\r\n        {\r\n\r\n          itemWithLowestID.LocationID = 20;\r\n          itemWithLowestID.Attribute10 = _job2.Capture01;\r\n\r\n          api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n          ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n\r\n          itemLog.User = this.Ets.User.Login;\r\n          itemLog.ItemLogDefinitionID = 4;\r\n          itemLog.LogDateTime = this.Ets.SiteNow;\r\n          itemLog.Lot = itemWithLowestID.Lot;\r\n          itemLog.ItemID = itemWithLowestID.ID;\r\n          itemLog.ProductID = 9;\r\n          itemLog.Quantity = 1;\r\n          itemLog.LocationID = 20;\r\n          itemLog.JobID = JobID;\r\n          itemLog.SubLot = itemWithLowestID.Lot;\r\n          itemLog.Notes = \"Moved to pick up line\";\r\n          //itemLog.MaterialID = 1;\r\n          itemLog.Capture10 = itemWithLowestID.Attribute10;\r\n\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result3;\r\n\r\n          result3 = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n        }\r\n\r\n      }\r\n      if (_job2.ProductID == 10)\r\n      {\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(2).ThrowIfLoadFailed(\"ID\", _job2.ProductID);\r\n        // Find the items that match the MaterialID and LocationIDs in items list\r\n        int locationIDsToCheck = 17;\r\n        var matchingItems = items.Where(i => i.MaterialID == _material.ID && locationIDsToCheck == i.LocationID);\r\n        this.Ets.Api.Tags.UpdateVirtualTagByID(417, 1, uow);\r\n        // Find the item with the lowest ID among the matching items\r\n        var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n        if (itemWithLowestID != null)\r\n        {\r\n\r\n          itemWithLowestID.LocationID = 20;\r\n          itemWithLowestID.Attribute10 = _job2.Capture01;\r\n\r\n          api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n          ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n\r\n          itemLog.User = this.Ets.User.Login;\r\n          itemLog.ItemLogDefinitionID = 4;\r\n          itemLog.LogDateTime = this.Ets.SiteNow;\r\n          itemLog.Lot = itemWithLowestID.Lot;\r\n          itemLog.ItemID = itemWithLowestID.ID;\r\n          itemLog.ProductID = 10;\r\n          itemLog.Quantity = 1;\r\n          itemLog.LocationID = 20;\r\n          itemLog.JobID = JobID;\r\n          itemLog.SubLot = itemWithLowestID.Lot;\r\n          itemLog.Notes = \"Moved to pick up line\";\r\n          //itemLog.MaterialID = 2;\r\n          itemLog.Capture10 = itemWithLowestID.Attribute10;\r\n\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result;\r\n\r\n          result = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n        }\r\n\r\n      }\r\n\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(432, _job.Name, uow);\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(433, product.Name, uow);\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(592, 1, uow);\r\n\r\n      Trace.Write(\"Tags have been changed.\");\r\n\r\n      uow.ExecuteReturnsResultObject().ThrowIfFailed();\r\n\r\n      // var args = new Dictionary<string, string>();\r\n      // args.Add(\"c\", \"ETS.Application.Wait.WaitForJobStart\");\r\n      // args.Add(\"SystemID\", _sys.ID.AsString());\r\n      // args.Add(\"JobName\", _job.Name);\r\n      // var url = this.Ets.BuildUrl(\"\", args);\r\n\r\n      var url = this.Ets.Pages.PageUrl;\r\n      this.Ets.Pages.RedirectToUrl(url);\r\n\r\n    }\r\n\r\n    private void OrderProduction(object sender, RowItemEventArgs e)\r\n    {\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n\r\n      // Get the selected job's ID\r\n      int jobID = e.GetInteger(\"JobID\");\r\n      JobID = jobID;\r\n\r\n      DbJobDiscreteComposite _job = this.Ets.Api.Data.DbJobDiscreteComposite.Load.ByID(JobID).ThrowIfLoadFailed(\"JobID\", this.JobID);\r\n      DbJob _job2 = this.Ets.Api.Data.DbJob.Load.ByID(JobID).ThrowIfLoadFailed(\"JobID\", this.JobID);\r\n\r\n      Trace.Write(\"The integer jobID's Value is: \" + jobID);\r\n\r\n      var uow = this.Ets.Api.CreateUnitOfWork();\r\n      var product = this.Ets.Api.Data.DbProduct.Load.ByID(_job.ProductID).ThrowIfLoadFailed(\"Job.ProductID\", _job.ProductID);\r\n\r\n      if (_job2.ProductID == 8)\r\n      {\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(3).ThrowIfLoadFailed(\"ID\", _job2.ProductID);\r\n\r\n        ETS.Core.Api.Models.Data.DbJobDiscrete jobDiscrete = new ETS.Core.Api.Models.Data.DbJobDiscrete();\r\n\r\n        var job = this.Ets.Api.Data.DbJobBatchComposite.Create.FromParentNone();\r\n\r\n        var jobNumber = this.Ets.Api.Util.Db.ExecuteScalar<int>(@\"SELECT Value FROM tSequence WHERE Name = 'JobID'\").Return + 1;\r\n        var jobName = @\"P-{0}\".FormatWith(jobNumber);\r\n        job.Name = jobName;\r\n        job.ProductID = 1;\r\n        \r\n        job.PlannedDurationSeconds = 100;\r\n        job.JobTypeID = 1;\r\n\r\n        job.PlannedNumberOfBatches = 1;\r\n        job.PlannedBatchSize = 1;\r\n        job.PlannedBatchSizeUnits = \"kg\";\r\n        job.PsSetID = 1;\r\n        job.PsRequestedPriority = 1;\r\n        \r\n        job.PsRequestedProductCode = \"B.SALMON\";\r\n        job.RecipeID = 2;\r\n        job.Capture07 = \"3\";\r\n\r\n        // Getting date locally from computer\r\n        DateTime datetime = DateTime.Now;\r\n        // Converting datetime to string (Otherwise Capture04 won't read it and there will be an error)\r\n        job.Capture04 = datetime.ToString(\"dd-MM-yyyy HH:mm:ss\");\r\n\r\n        jobDiscrete.PlannedProductionCount = 1;\r\n        jobDiscrete.PlannedProductionCountUnits = \"Pallet\";\r\n        jobDiscrete.PlannedCalculationCount = 1;\r\n        jobDiscrete.PlannedCalculationCountUnits = \"Pallet\";\r\n        jobDiscrete.JobID = jobNumber;\r\n\r\n\r\n        this.Ets.Api.Data.DbJobBatchComposite.Save.ValidateIgnoredForInsertAsNew(job);\r\n        ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbJobDiscrete> result;\r\n\r\n        // Here we insert the entity in the database (The ID will be created when inserted to the database)\r\n        result = api.Data.DbJobDiscrete.Save.InsertAsNew(jobDiscrete);\r\n\r\n       \r\n\r\n        // run create job batch script after job has been created\r\n\r\n\r\n        // has successfully saved, redirect to success\r\n        var url = this.Ets.Pages.PageUrl;\r\n        this.Ets.Pages.RedirectToUrl(url);\r\n      }\r\n      if (_job2.ProductID == 9)\r\n      {\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(1).ThrowIfLoadFailed(\"ID\", _job2.ProductID);\r\n        ETS.Core.Api.Models.Data.DbJobDiscrete jobDiscrete = new ETS.Core.Api.Models.Data.DbJobDiscrete();\r\n\r\n        var job = this.Ets.Api.Data.DbJobBatchComposite.Create.FromParentNone();\r\n\r\n        var jobNumber = this.Ets.Api.Util.Db.ExecuteScalar<int>(@\"SELECT Value FROM tSequence WHERE Name = 'JobID'\").Return + 1;\r\n        var jobName = @\"P-{0}\".FormatWith(jobNumber);\r\n        job.Name = jobName;\r\n        job.ProductID = 3;\r\n        \r\n        job.PlannedDurationSeconds = 100;\r\n        job.JobTypeID = 1;\r\n\r\n        job.PlannedNumberOfBatches = 1;\r\n        job.PlannedBatchSize = 1;\r\n        job.PlannedBatchSizeUnits = \"kg\";\r\n        job.PsSetID = 1;\r\n        job.PsRequestedPriority = 1;\r\n        \r\n        job.PsRequestedProductCode = \"B.TROUT\";\r\n        job.RecipeID = 2;\r\n        job.Capture07 = \"1\";\r\n\r\n        // Getting date locally from computer\r\n        DateTime datetime = DateTime.Now;\r\n        // Converting datetime to string (Otherwise Capture04 won't read it and there will be an error)\r\n        job.Capture04 = datetime.ToString(\"dd-MM-yyyy HH:mm:ss\");\r\n\r\n        jobDiscrete.PlannedProductionCount = 1;\r\n        jobDiscrete.PlannedProductionCountUnits = \"Pallet\";\r\n        jobDiscrete.PlannedCalculationCount = 1;\r\n        jobDiscrete.PlannedCalculationCountUnits = \"Pallet\";\r\n        jobDiscrete.JobID = jobNumber;\r\n\r\n\r\n        this.Ets.Api.Data.DbJobBatchComposite.Save.ValidateIgnoredForInsertAsNew(job);\r\n        ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbJobDiscrete> result;\r\n\r\n        // Here we insert the entity in the database (The ID will be created when inserted to the database)\r\n        result = api.Data.DbJobDiscrete.Save.InsertAsNew(jobDiscrete);\r\n\r\n        \r\n\r\n        // run create job batch script after job has been created\r\n\r\n\r\n        // has successfully saved, redirect to success\r\n        var url = this.Ets.Pages.PageUrl;\r\n        this.Ets.Pages.RedirectToUrl(url);\r\n      }\r\n      if (_job2.ProductID == 10)\r\n      {\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(2).ThrowIfLoadFailed(\"ID\", _job2.ProductID);\r\n        ETS.Core.Api.Models.Data.DbJobDiscrete jobDiscrete = new ETS.Core.Api.Models.Data.DbJobDiscrete();\r\n\r\n        var job = this.Ets.Api.Data.DbJobBatchComposite.Create.FromParentNone();\r\n\r\n        var jobNumber = this.Ets.Api.Util.Db.ExecuteScalar<int>(@\"SELECT Value FROM tSequence WHERE Name = 'JobID'\").Return + 1;\r\n        var jobName = @\"P-{0}\".FormatWith(jobNumber);\r\n        job.Name = jobName;\r\n        job.ProductID = 2;\r\n        \r\n        job.PlannedDurationSeconds = 100;\r\n        job.JobTypeID = 1;\r\n\r\n        job.PlannedNumberOfBatches = 1;\r\n        job.PlannedBatchSize = 1;\r\n        job.PlannedBatchSizeUnits = \"kg\";\r\n        job.PsSetID = 1;\r\n        job.PsRequestedPriority = 1;\r\n        \r\n        job.PsRequestedProductCode = \"B.COD\";\r\n        job.RecipeID = 2;\r\n        job.Capture07 = \"2\";\r\n\r\n        // Getting date locally from computer\r\n        DateTime datetime = DateTime.Now;\r\n        // Converting datetime to string (Otherwise Capture04 won't read it and there will be an error)\r\n        job.Capture04 = datetime.ToString(\"dd-MM-yyyy HH:mm:ss\");\r\n\r\n        jobDiscrete.PlannedProductionCount = 1;\r\n        jobDiscrete.PlannedProductionCountUnits = \"Pallet\";\r\n        jobDiscrete.PlannedCalculationCount = 1;\r\n        jobDiscrete.PlannedCalculationCountUnits = \"Pallet\";\r\n        jobDiscrete.JobID = jobNumber;\r\n\r\n\r\n        this.Ets.Api.Data.DbJobBatchComposite.Save.ValidateIgnoredForInsertAsNew(job);\r\n        ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbJobDiscrete> result;\r\n\r\n        // Here we insert the entity in the database (The ID will be created when inserted to the database)\r\n        result = api.Data.DbJobDiscrete.Save.InsertAsNew(jobDiscrete);\r\n\r\n        \r\n\r\n        // run create job batch script after job has been created\r\n\r\n\r\n        // has successfully saved, redirect to success\r\n        var url = this.Ets.Pages.PageUrl;\r\n        this.Ets.Pages.RedirectToUrl(url);\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}",
  "ContentPageParameters": "",
  "ContentData": "",
  "ContentJs": "",
  "ContentCss": ""
}