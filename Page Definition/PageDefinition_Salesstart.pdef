{
  "TrakSYS_Version": "12.0.0",
  "Name": "WaitForJobStart",
  "AltName": "",
  "Description": "",
  "Notes": "",
  "Key": "Salesstart",
  "IconCss": "",
  "NavigationIconCss": "",
  "NavigationTitle": "",
  "PageTitle": "",
  "RefreshSeconds": 0,
  "RefreshKeysEx": "",
  "IsHeaderVisible": 2,
  "IsTitleVisible": 2,
  "IsBreadcrumbsVisible": 2,
  "SidebarMode": 2,
  "CssMode": 1,
  "IsSpokesVisible": 2,
  "IsVisibleInNavigation": true,
  "InstanceType": 0,
  "InstanceScript": "",
  "ValueScript": "",
  "Css": "",
  "Js": "",
  "ContentMode": 0,
  "ContentKey": "",
  "ContentView": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Content><Row ID=\"R1\"><Col ID=\"R1C1\" Width=\"2\" /><Col ID=\"R1C2\" Width=\"8\"><Part ID=\"DivSpacer\" Key=\"ETS.TsDiv\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"100\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"false\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"false\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"HeaderTimeout\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{HeaderTimeout[]}\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"fa-exclamation-triangle\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"tscolor-warning\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"HeaderTimeout.Visible\",\r\n    \"Value\": \"false\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"HeaderMessage\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{HeaderText[]}\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"fas fa-spinner fa-pulse\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"HeaderMessage.Visible\",\r\n    \"Value\": \"false\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"PMessage\" Key=\"ETS.TsParagraph\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Message.MarkDown}\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Buttons\" Key=\"ETS.TsButtons\"><Parameters><![CDATA[{\r\n  \"Layout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"DefaultFormButtonKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ItemJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"Cancel\\\",\\r\\n    \\\"CaptionEx\\\": \\\"resx:Caption.Cancel, Ts.Core\\\",\\r\\n    \\\"ToolTipEx\\\": null,\\r\\n    \\\"ButtonTypeCssEx\\\": null,\\r\\n    \\\"EnabledEx\\\": null,\\r\\n    \\\"VisibleEx\\\": null,\\r\\n    \\\"IconCssEx\\\": null,\\r\\n    \\\"PickerTypeLinkButton\\\": null,\\r\\n    \\\"UrlEx\\\": \\\"{ETS.ReturnUrl:raw}\\\",\\r\\n    \\\"OnClientClickEx\\\": null,\\r\\n    \\\"OnServerClick\\\": null\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"InputExpireValue\" Key=\"ETS.Forms.TsInputHidden\"><Parameters><![CDATA[{\r\n  \"FormKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"WaitFor.ExpireValue\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part></Col></Row></Content>",
  "ContentCode": "using System;\r\nusing System.Collections.Generic;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing System.Web.ModelBinding;\r\nusing ETS.Core.Api;\r\nusing ETS.Core.Api.Models;\r\nusing ETS.Core.Api.Models.Data;\r\nusing ETS.Core.Enums;\r\nusing ETS.Core.Extensions;\r\nusing ETS.Core.Services.Resource;\r\nusing ETS.Ts.Core.ContentParts;\r\nusing ETS.Ts.Core.Enums;\r\nusing ETS.Ts.Core.Scripting;\r\n\r\nnamespace ETS.Ts.Content\r\n{\r\n  /// ***********************************************************\r\n  /// <templateauthor>Parsec</templateauthor>\r\n  /// <templateversion>Created from template 10.0.0</templateversion>\r\n  /// ***********************************************************\r\n  public partial class Salesstart : ContentPageBase\r\n  {\r\n    /// <remarks>\r\n    /// Hardcode the various settings, convert them to ValuesProperty\r\n    /// if you want them driven from the QueryString/ValuesDictionary\r\n    /// \r\n    /// _initialDelayMs:\r\n    ///   Waits this many milliseconds on the first request to allow for\r\n    ///   the posibility to go to directly to the SuccessUrl\r\n    /// _timeoutSeconds:\r\n    ///   After this many seconds, the Timeout message will be displayed.\r\n    /// _refreshIntervalSeconds:\r\n    ///   How often do we poll the server to see if the Wait condition is done.\r\n    /// </remarks>\r\n    private int _initialDelayMs = 1000;\r\n    private int _timeoutSeconds = 10;\r\n    private int _refreshIntervalSeconds = 2;\r\n\r\n    // TODO add data driven parameters that can be used in ContentPage_Init and/or IsWaitConditionSatisfied\r\n    //[ValuesProperty()]\r\n    //public int SystemID { get; set; } = -1;\r\n\r\n    /// ***********************************************************\r\n    /// <remarks>\r\n    /// All Page level ContentProperties have been set from default\r\n    /// values or Ets.Values. Content Parts are not yet loaded/initialized.\r\n    /// \r\n    /// Do things like:\r\n    ///   Check Page Permissions\r\n    ///   Set Resource Strings\r\n    /// </remarks>\r\n    /// ***********************************************************\r\n    protected override bool ContentPage_Init()\r\n    {\r\n      if (!this.IsPostBack)\r\n      {\r\n        this.Ets.Pages.ContentPageRefreshSeconds = _refreshIntervalSeconds;\r\n        var expiredAtString = this.Ets.SiteNow.AddSeconds(_timeoutSeconds).ToUniversalDateTimeString();\r\n        this.InputExpireValue.InputValue = expiredAtString;\r\n\r\n        if (_initialDelayMs > 0) { System.Threading.Thread.Sleep(_initialDelayMs); }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    /// ***********************************************************\r\n    protected bool IsWaitConditionSatisfied()\r\n    {\r\n\r\n      // TODO write a sql statement or some other logic to determine\r\n      // if the Wait condition is satisfied.\r\n\r\n      string sql = \"SELECT Value from tTag WHERE ID = 592\";\r\n\r\n      if (this.Ets.Api.Util.Db.ExecuteScalar<bool>(sql).ThrowIfFailed() == true) return true;\r\n\r\n      return false;\r\n\r\n      // return this.Ets.Api.Util.Db.ExecuteScalar<bool>(sql).ThrowIfFailed();\r\n    }\r\n\r\n    /// ***********************************************************\r\n    protected override bool ContentPage_PartPreInit10()\r\n    {\r\n      // TODO customize messages based on if we are waiting or timedout\r\n\r\n      // check for timeout\r\n      var expiredDateTime = this.Ets.Form.GetValueAsDateTimeOffsetByKey(this.InputExpireValue.FormKey, this.Ets.SiteNow);\r\n      if (this.Ets.SiteNow > expiredDateTime)\r\n      {\r\n        this.Ets.Values[\"HeaderTimeout.Visible\"] = true;\r\n        this.Ets.Values[\"HeaderMessage.Visible\"] = false;\r\n\r\n        this.Ets.Values[\"HeaderTimeout\"] = \"Timeout\";\r\n        // examples\r\n        // this.Ets.Values[\"Message.MarkDown\"] = \"The thing **{0}** did not something.\".FormatWith(this.EntityName);\r\n        this.Ets.Values[\"Message.MarkDown\"] = \"Loading Overview\";\r\n      }\r\n      else\r\n      {\r\n        this.Ets.Values[\"HeaderTimeout.Visible\"] = false;\r\n        this.Ets.Values[\"HeaderMessage.Visible\"] = true;\r\n\r\n        this.Ets.Values[\"HeaderText\"] = \"Waiting\";\r\n        // examples\r\n        // this.Ets.Values[\"Message.MarkDown\"] = \"Waiting for **{0}** to something...\".FormatWith(this.EntityName);\r\n        this.Ets.Values[\"Message.MarkDown\"] = \"Waiting Markdown...\";\r\n\r\n        var url = \"http://10.19.10.4/TS/pages/home/batching/batchoverview/\";\r\n\r\n        // check condition\r\n        if (this.IsWaitConditionSatisfied()) return this.Ets.Pages.RedirectToUrl(url);\r\n      }\r\n\r\n      return true;\r\n    }\r\n  }\r\n}",
  "ContentPageParameters": "",
  "ContentData": "",
  "ContentJs": "",
  "ContentCss": ""
}