{
  "TrakSYS_Version": "12.0.0",
  "Name": "Planned Production Jobs",
  "AltName": "",
  "Description": "",
  "Notes": "",
  "Key": "PlannedProdJobs",
  "IconCss": "",
  "NavigationIconCss": "tsicon-box",
  "NavigationTitle": "",
  "PageTitle": "",
  "RefreshSeconds": 0,
  "RefreshKeysEx": "BatchRefresh",
  "IsHeaderVisible": 2,
  "IsTitleVisible": 2,
  "IsBreadcrumbsVisible": 2,
  "SidebarMode": 2,
  "CssMode": 1,
  "IsSpokesVisible": 0,
  "IsVisibleInNavigation": true,
  "InstanceType": 0,
  "InstanceScript": "",
  "ValueScript": "",
  "Css": "",
  "Js": "",
  "ContentMode": 0,
  "ContentKey": "",
  "ContentView": "<Content><Row ID=\"R1\"><Col ID=\"R1C1\" Width=\"3\" CssClassExtra=\"\" CardMode=\"2\" CardModeKey=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Part ID=\"headerFilters\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Filters\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 2\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"bi-filter\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"datePicker\" Key=\"ETS.Filters.TsFilterDateTimeRange\"><Parameters><![CDATA[{\r\n  \"StartCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Start Date\"\r\n  },\r\n  \"EndCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"End Date\"\r\n  },\r\n  \"InitialStartDateTime\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"today\"\r\n  },\r\n  \"InitialEndDateTime\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"today + 5\"\r\n  },\r\n  \"IsReadOnly\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"MenuLayout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 2\r\n  },\r\n  \"InputMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"NextPrevButtonsEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"NextPrevButtonsAutoRefresh\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"NextPrevButtonsSplashMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"JsObjectKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CssClassExtraInput\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"TargetKeyPrefix\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"cmbProduct\" Key=\"ETS.Filters.TsFilterDropDown\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Product\"\r\n  },\r\n  \"TargetKeySelectedValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"cmbProduct\"\r\n  },\r\n  \"SelectedValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"TargetKeyAdditionalValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"12\"\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"4\"\r\n  },\r\n  \"ExtraOption\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"ExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"AdditionalExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"AutoRefresh\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"false\"\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.Products\"\r\n  },\r\n  \"DataValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{r:Value}\"\r\n  },\r\n  \"DataTextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{r:DisplayName}\"\r\n  },\r\n  \"DataAdditionalValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"btnRefresh\" Key=\"ETS.Filters.TsRefreshButton\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Refresh\"\r\n  },\r\n  \"Css\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"btn-default\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"UrlEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"true\"\r\n  }\r\n}]]></Parameters></Part></Col><Col ID=\"R1C2\" Width=\"9\" CssClassExtra=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" CardMode=\"2\" CardModeKey=\"\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Row ID=\"R1C2R1\"><Col ID=\"R1C2R1C1\" Width=\"12\"><Part ID=\"headerBatchJobs\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Planned Jobs for Production\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"fa-bullseye\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></Col></Row><Row ID=\"R1C2R2\"><Col ID=\"R1C2R2C1\" Width=\"6\" /><Col ID=\"R1C2R2C2\" Width=\"6\"><Part ID=\"menuViews\" Key=\"ETS.TsMenu\"><Parameters><![CDATA[{\r\n  \"Layout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"ItemJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"Tab\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Tabular\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"glyphicon-list\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"self:?tab=1&vis=0\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  },\\r\\n  {\\r\\n    \\\"Key\\\": \\\"Vis\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Visual\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IconCssEx\\\": \\\"far fa-chart-bar\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"self:?tab=0&vis=1\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SelectedMenuItem\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></Col></Row><Row ID=\"R1C2R3\"><Col ID=\"R1C2R3C1\" Width=\"12\"><Part ID=\"tableBatchJobs\" Key=\"ETS.Lists.TsTable\"><Parameters><![CDATA[{\r\n  \"ColumnsJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Job Name\\\",\\r\\n    \\\"ContentEx\\\": \\\"{JobName}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Job State\\\",\\r\\n    \\\"ContentEx\\\": \\\"{JobState}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Planned Start\\\",\\r\\n    \\\"ContentEx\\\": \\\"{StartTime:dd-MM-yyyy HH:mm:ss}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Product\\\",\\r\\n    \\\"ContentEx\\\": \\\"{ProductName}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Batch\\\",\\r\\n    \\\"ContentEx\\\": \\\"{BatchCount} x {BatchSize} {BatchUnits}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"CaptionEx\\\": \\\"Material Stock\\\",\\r\\n    \\\"ContentEx\\\": \\\"{StockStatus}\\\",\\r\\n    \\\"CssClass\\\": \\\"\\\",\\r\\n    \\\"Width\\\": \\\"\\\",\\r\\n    \\\"AlignmentCss\\\": \\\"\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"RowCssClassExtraEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"StatesJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Field\\\": \\\"JobState\\\",\\r\\n    \\\"ValueEx\\\": \\\"In Progress\\\",\\r\\n    \\\"IconCss\\\": \\\"fa fa-spinner fa-spin\\\",\\r\\n    \\\"Color\\\": \\\"-9649844\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Field\\\": \\\"JobState\\\",\\r\\n    \\\"ValueEx\\\": \\\"Complete\\\",\\r\\n    \\\"IconCss\\\": \\\"\\\",\\r\\n    \\\"Color\\\": \\\"-4869454\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Field\\\": \\\"JobState\\\",\\r\\n    \\\"ValueEx\\\": \\\"Behind\\\",\\r\\n    \\\"IconCss\\\": \\\"\\\",\\r\\n    \\\"Color\\\": \\\"-65536\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"RowIconCssEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{IconCss[]}\"\r\n  },\r\n  \"RowColorEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Color[]}\"\r\n  },\r\n  \"AnchorNameEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ButtonsJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"button_start\\\",\\r\\n    \\\"CaptionEx\\\": \\\"Start\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"ButtonTypeCssEx\\\": \\\"\\\",\\r\\n    \\\"EnabledEx\\\": \\\"{EnableJobStart}\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IsPopupMenu\\\": false,\\r\\n    \\\"IconCssEx\\\": \\\"fa-play\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"StartJob\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.BatchJobs.HasData\",\r\n    \"Value\": true\r\n  },\r\n  \"RowUrlEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"self:?JobID={JobID}\"\r\n  },\r\n  \"RowOnClientClickEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"RowOnServerClick\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ConfirmEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"ConfirmCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ConfirmMessageEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"WindowTargetEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SplashMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldUseDataSourceSelectedIndex\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"WordWrap\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"RowEnabledEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"TopN\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.BatchJobs\"\r\n  },\r\n  \"DataDashJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Div0\" Key=\"ETS.TsDiv\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 30\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"DataDashJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Instructions\" Key=\"ETS.TsParagraph\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"No Jobs found with the current filters.\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.BatchJobs.HasNoData\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"chartBatchJobs\" Key=\"ETS.Charts.Js.TsJsChartState\"><Parameters><![CDATA[{\r\n  \"ResponsiveMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"WidthPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 400\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 600\r\n  },\r\n  \"AnimationIsEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"vis\",\r\n    \"Value\": false\r\n  },\r\n  \"TitleIsVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TitleTextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"TitleHeight\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"BarHeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"BarBackColor\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-4869454\"\r\n  },\r\n  \"BarBackTipEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{ValueStart:ddd dd hh:mm tt} - {ValueEnd:ddd dd hh:mm tt} [ {ValueDifference:span:hms} ]\"\r\n  },\r\n  \"BarBackLabel\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"BarBackShowWhenNoData\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"GutterColor\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"0\"\r\n  },\r\n  \"LineColor\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"LineWidthPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"LineStyle\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 5\r\n  },\r\n  \"LegendPosition\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"LegendFontSize\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"AxisValueIsEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"AxisValueLabelFormatMoment\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"AxisValueLabelMinRotation\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AxisValueLabelMaxRotation\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AxisValueLabelFontSize\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"AxisValueScaleMinimumValue\": {\r\n    \"Key\": \"SDT\",\r\n    \"Value\": \"weekstart\"\r\n  },\r\n  \"AxisValueScaleMaximumValue\": {\r\n    \"Key\": \"EDT\",\r\n    \"Value\": \"today\"\r\n  },\r\n  \"AxisValueScaleIntervalType\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AxisValueScaleInterval\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AxisValueScaleIntervalAutoSkip\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"AxisGroupTitleEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"AxisGroupTitleFontSize\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"AxisGroupLabelFontSize\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"PointTipEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{ProductName} [{RecipeName}] - {BatchCount} x {BatchSize} {BatchUnits} batch(s) - {ValueDifference:span:duration}\"\r\n  },\r\n  \"PointColor\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"0\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"GroupValue\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"JobID\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"ShouldUseDataSourceSelectedIndex\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SelectedColor\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"0\"\r\n  },\r\n  \"PointUrlEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"self:?JobID={JobID}\"\r\n  },\r\n  \"PointOnClientClickEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"PointOnServerClick\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"PointConfirmEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"PointConfirmCaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"PointConfirmMessageEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"PointWindowTargetEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"PointSplashMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.BatchJobs\"\r\n  },\r\n  \"DataFieldGroupValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"GroupValue\"\r\n  },\r\n  \"DataFieldGroupLabel\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"GroupLabel\"\r\n  },\r\n  \"DataFieldValueStart\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueStart\"\r\n  },\r\n  \"DataFieldValueEnd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueEnd\"\r\n  },\r\n  \"DataFieldValueDifference\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueDifference\"\r\n  },\r\n  \"DataFieldValueID\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueID\"\r\n  },\r\n  \"DataFieldValueGroupID\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueGroupID\"\r\n  },\r\n  \"DataFieldValueGroupName\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueGroupName\"\r\n  },\r\n  \"DataFieldValueGroupColor\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"ValueGroupColor\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></Col></Row></Col></Row><Row ID=\"R2\"><ColFixedLeft ID=\"R2C1\" Width=\"200\"><Part ID=\"dataProducts\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"1\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Name\\\": \\\"sysID\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"-1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"SystemID\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT DISTINCT p.ID [Value]\\r\\n, p.Name [DisplayName]\\r\\nFROM tRecipe r\\r\\nJOIN tProduct p\\r\\nON r.ProductID = p.ID\\r\\nWHERE SystemID = 1\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.Products\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part><Part ID=\"dataStatus\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"1\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT 0 [Value], '[ All ]' [DisplayName]\\r\\nUNION SELECT 1, 'Hide Completed'\\r\\n\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.Status\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></ColFixedLeft><Col ID=\"R2C2\" Width=\"12\" CssClassExtra=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\"><Part ID=\"dataBatchJobs\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"3\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Name\\\": \\\"SID\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"SystemID\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"PID\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"cmbProduct\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"SDT\\\",\\r\\n    \\\"SqlDataType\\\": \\\"datetime\\\",\\r\\n    \\\"DefaultValue\\\": \\\"today\\\",\\r\\n    \\\"ValuesKey\\\": \\\"SDT\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"EDT\\\",\\r\\n    \\\"SqlDataType\\\": \\\"datetime\\\",\\r\\n    \\\"DefaultValue\\\": \\\"today + 1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"EDT\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"Name\\\": \\\"HideComplete\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"cmbStatus\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"UPDATE tJob\\r\\nSET Capture08 = \\r\\n    CASE \\r\\n        WHEN EXISTS (\\r\\n            SELECT 1\\r\\n            FROM tItem\\r\\n            WHERE MaterialID = 1\\r\\n            AND LocationID BETWEEN 7 AND 15\\r\\n        )\\r\\n        THEN 'In Stock'\\r\\n        ELSE 'Out of Stock'\\r\\n    END\\r\\nWHERE Capture07 = '1';\\r\\nUPDATE tJob\\r\\nSET Capture08 = \\r\\n    CASE \\r\\n        WHEN EXISTS (\\r\\n            SELECT 1\\r\\n            FROM tItem\\r\\n            WHERE MaterialID = 2\\r\\n            AND LocationID BETWEEN 7 AND 15\\r\\n        )\\r\\n        THEN 'In Stock'\\r\\n        ELSE 'Out of Stock'\\r\\n    END\\r\\nWHERE Capture07 = '2';\\r\\nUPDATE tJob\\r\\nSET Capture08 = \\r\\n    CASE \\r\\n        WHEN EXISTS (\\r\\n            SELECT 1\\r\\n            FROM tItem\\r\\n            WHERE MaterialID = 3\\r\\n            AND LocationID BETWEEN 7 AND 15\\r\\n        )\\r\\n        THEN 'In Stock'\\r\\n        ELSE 'Out of stock'\\r\\n    END\\r\\nWHERE Capture07 = '3';\\r\\nSELECT \\r\\n    j.[ID] [JobID],\\r\\n    j.Name [JobName],\\r\\n    j.PlannedStartDateTime [StartTime],\\r\\n    j.PlannedDurationSeconds [Duration],\\r\\n    p.Name [ProductName],\\r\\n    r.Name [RecipeName],\\r\\n    b.PlannedNumberOfBatches [BatchCount],\\r\\n    b.PlannedBatchSize [BatchSize],\\r\\n    b.PlannedBatchSizeUnits [BatchUnits],\\r\\n    s.Name [SystemName],\\r\\n    CASE \\r\\n        WHEN jsa.StartDateTime IS NULL AND j.PlannedStartDateTime < SYSDATETIMEOFFSET() THEN 'Behind'\\r\\n        WHEN jsa.StartDateTime IS NULL AND j.PlannedStartDateTime >= SYSDATETIMEOFFSET() THEN  'In Queue'\\r\\n        WHEN jsa.StartDateTime IS NOT NULL AND jsa.EndDateTime IS NULL THEN 'In Progress'\\r\\n        WHEN jsa.StartDateTime IS NOT NULL AND jsa.EndDateTime IS NOT NULL THEN 'Complete'\\r\\n    END [JobState],\\r\\n    j.[ID] [GroupValue],\\r\\n    j.Name [GroupLabel],\\r\\n    1 [GroupDisplaayOrder],\\r\\n    j.PlannedStartDateTime [ValueStart],\\r\\n    DATEADD(SECOND, j.plannedDurationSeconds, j.PlannedStartDateTime) [ValueEnd],\\r\\n    j.PlannedDurationSeconds [ValueDifference],\\r\\n    NULL [ValueID],\\r\\n    1 [ValueGroupID],\\r\\n    1 [ValueGroupNumber],\\r\\n    -16738340 [ValueGroupColor],\\r\\n    CASE\\r\\n        WHEN jsa.StartDateTime IS NULL AND j.Capture08 = 'In Stock' THEN 1\\r\\n        ELSE 0\\r\\n    END [EnableJobStart],\\r\\n    jt.Color,\\r\\n    jt.IconCss,\\r\\n    CASE\\r\\n       \\r\\n        WHEN j.Capture08 = 'Out of Stock' THEN 1\\r\\n        ELSE 0\\r\\n    END [IsInStock],\\r\\n    j.Capture08 [StockStatus] -- Include the stock status as a new column\\r\\nFROM \\r\\n    tJob j\\r\\nLEFT JOIN tJobType jt ON j.JobTypeID = jt.ID\\r\\nJOIN tJobBatch b ON j.ID = b.JobID\\r\\nLEFT JOIN tRecipe r ON b.RecipeID = r.ID\\r\\nJOIN tProduct p ON j.ProductID = p.ID\\r\\nJOIN tJobSystemPlanned jsp ON jsp.JobID = b.JobID\\r\\nJOIN tSystem s ON jsp.SystemID = s.ID\\r\\nLEFT JOIN tJobSystemActual jsa ON jsa.JobID = j.ID\\r\\nWHERE \\r\\n    s.ID = 1\\r\\n    AND @PID IN (-1, p.ID)\\r\\n    AND j.PlannedStartDateTime BETWEEN @SDT AND @EDT\\r\\n    AND (jsa.EndDateTime IS NULL OR @HideComplete = 0)\\r\\nORDER BY j.PlannedStartDateTime;\\r\\n\\r\\n\\r\\n\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"data.BatchJobs\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"JobID\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"JobID\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></Col><ColFixedRight ID=\"R2C3\" Width=\"200\" /></Row></Content>",
  "ContentCode": "using System;\r\nusing System.Collections.Generic;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing System.Web.ModelBinding;\r\nusing System.Web.UI.DataVisualization.Charting;\r\nusing ETS.Core.Api;\r\nusing ETS.Core.Api.Models;\r\nusing ETS.Core.Api.Models.Data;\r\nusing ETS.Core.Enums;\r\nusing ETS.Core.Extensions;\r\nusing ETS.Core.Services.Resource;\r\nusing ETS.Ts.Core.ContentParts;\r\nusing ETS.Ts.Core.Enums;\r\nusing ETS.Ts.Core.Scripting;\r\n\r\nnamespace ETS.Ts.Content\r\n{\r\n  /// ***********************************************************\r\n  public partial class PlannedProdJobs : ContentPageBase\r\n  {\r\n    public int SystemID { get; set; } = 1;\r\n\r\n    [ValuesProperty()]\r\n    public int JobID { get; set; } = -1;\r\n    public DbSystem _sys;\r\n    DbMaterial _material;\r\n\r\n    // ***********************************************************\r\n    protected override bool ContentPage_Init()\r\n    {\r\n      // Setting the \"JobID\" value from the selected batch job\r\n      this.Ets.Values[\"JobID\"] = this.Ets.Values.GetAsInt(\"data.BatchJobs.Selected.JobID\");\r\n\r\n      // Loading system information based on the provided SystemID\r\n      _sys = this.Ets.Api.Data.DbSystem.Load.ByID(this.SystemID).ThrowIfLoadFailed(\"ID\", this.SystemID);\r\n\r\n      // Storing the system name in ETS values for reference\r\n      this.Ets.Values[\"System.Name\"] = _sys.Name;\r\n\r\n      // Retrieving the \"JobID\" value again (redundant operation, might be unintentional)\r\n      this.Ets.Values[\"JobID\"] = this.Ets.Values.GetAsInt(\"data.BatchJobs.Selected.JobID\");\r\n\r\n      // Acquiring an instance of the ETS API service\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n\r\n      // Initializing a list to hold items from the database\r\n      List<ETS.Core.Api.Models.Data.DbItem> items = new List<ETS.Core.Api.Models.Data.DbItem>();\r\n\r\n      // Loading a list of items from the database using the API\r\n      items = api.Data.ListOf.DbItems.GetList.WithSql(\"SELECT * FROM tItem\");\r\n\r\n      // Defining MaterialIDs to check and lists of LocationIDs for each material\r\n      int[] materialIDsToCheck = { 1, 2, 3 };\r\n      List<int>[] locationIDsToCheck = new List<int>[]\r\n      {\r\n        new List<int> { 7, 8, 9, 10, 11, 12, 13, 14, 15 },\r\n        new List<int> { 7, 8, 9, 10, 11, 12, 13, 14, 15 },\r\n        new List<int> { 7, 8, 9, 10, 11, 12, 13, 14, 15 }\r\n      };\r\n\r\n      // Finding items that match MaterialID and LocationIDs for each material\r\n      var matchingItemsMaterial1 = items.Where(i => i.MaterialID == materialIDsToCheck[0] && locationIDsToCheck[0].Contains(i.LocationID));\r\n      var matchingItemsMaterial2 = items.Where(i => i.MaterialID == materialIDsToCheck[1] && locationIDsToCheck[1].Contains(i.LocationID));\r\n      var matchingItemsMaterial3 = items.Where(i => i.MaterialID == materialIDsToCheck[2] && locationIDsToCheck[2].Contains(i.LocationID));\r\n\r\n      // Checking for matching items for MaterialID 1\r\n      if (matchingItemsMaterial1.Any())\r\n      {\r\n        // Items with MaterialID 1 and specific LocationIDs exist.\r\n        // Updating a virtual tag accordingly.\r\n        api.Tags.UpdateVirtualTagByID(595, 0); // Tag ID 595 represents Material 1 presence\r\n      }\r\n      else\r\n      {\r\n        // No matching items for MaterialID 1.\r\n        api.Tags.UpdateVirtualTagByID(595, 1); // Tag ID 595 represents Material 1 absence\r\n      }\r\n\r\n      // Checking for matching items for MaterialID 2\r\n      if (matchingItemsMaterial2.Any())\r\n      {\r\n        // Matching items for MaterialID 2 exist.\r\n        // Updating a virtual tag accordingly.\r\n        api.Tags.UpdateVirtualTagByID(593, 0); // Tag ID 593 represents Material 2 presence\r\n      }\r\n      else\r\n      {\r\n        // No matching items for MaterialID 2.\r\n        // Triggering a function for MaterialID 2 or updating a virtual tag.\r\n        api.Tags.UpdateVirtualTagByID(593, 1); // Tag ID 593 represents Material 2 absence\r\n      }\r\n\r\n      // Checking for matching items for MaterialID 3\r\n      if (matchingItemsMaterial3.Any())\r\n      {\r\n        // Matching items for MaterialID 3 exist.\r\n        // Updating a virtual tag accordingly.\r\n        api.Tags.UpdateVirtualTagByID(594, 0); // Tag ID 594 represents Material 3 presence\r\n      }\r\n      else\r\n      {\r\n        // No matching items for MaterialID 3.\r\n        // Triggering a function for MaterialID 3 or updating a virtual tag.\r\n        api.Tags.UpdateVirtualTagByID(594, 1); // Tag ID 594 represents Material 3 absence\r\n      }\r\n\r\n      // Indicating the completion of processing\r\n      return true;\r\n\r\n    }\r\n\r\n    // *********************************************************************\r\n    protected override bool ContentPage_PartPreInit02()\r\n    {\r\n\r\n      return true;\r\n    }\r\n    protected override bool ContentPage_PartPreInit10()\r\n    {\r\n\r\n      return true;\r\n    }\r\n    // ***********************************************************\r\n\r\n    // starts a job when clicked\r\n    private void StartJob(object sender, RowItemEventArgs e)\r\n    {\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n\r\n      // Extract the selected job's ID\r\n      int jobID = e.GetInteger(\"JobID\");\r\n      JobID = jobID;\r\n      // Load the job information from the database\r\n      DbJob _job = this.Ets.Api.Data.DbJob.Load.ByID(JobID).ThrowIfLoadFailed(\"JobID\", this.JobID);\r\n\r\n      // Set up the unit of work for database operations\r\n      var uow = this.Ets.Api.CreateUnitOfWork();\r\n      // Load the associated product information\r\n      var product = this.Ets.Api.Data.DbProduct.Load.ByID(_job.ProductID).ThrowIfLoadFailed(\"Job.ProductID\", _job.ProductID);\r\n\r\n      // Initialize a list to hold retrieved items\r\n      List<ETS.Core.Api.Models.Data.DbItem> items = new List<ETS.Core.Api.Models.Data.DbItem>();\r\n\r\n      // Fetch the list of items from the database\r\n      items = api.Data.ListOf.DbItems.GetList.WithSql(\"SELECT * FROM tItem\");\r\n      // Capture the current date and time\r\n      DateTime currentDateTime = DateTime.Now;\r\n\r\n      // Define the reference point for Unix timestamp (January 1, 1970)\r\n      DateTime unixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);\r\n\r\n      // Calculate the time difference in seconds to get Unix timestamp\r\n      TimeSpan timeDifference = currentDateTime.ToUniversalTime() - unixEpoch;\r\n      double unixTimestampSeconds = timeDifference.TotalSeconds;\r\n\r\n      // Check if the job's associated product is of type \"salmon\"\r\n      if (_job.ProductID == 1)\r\n      {\r\n        // Load material information for \"salmon\"\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(3).ThrowIfLoadFailed(\"ID\", _job.ProductID);\r\n\r\n        // Define a list of location IDs to consider\r\n        List<int> locationIDsToCheck = new List<int> { 7, 8, 9, 10, 11, 12, 13, 14, 15 };\r\n\r\n        // Filter items that match the material and location criteria\r\n        var matchingItems = items.Where(i => i.MaterialID == _material.ID && locationIDsToCheck.Contains(i.LocationID));\r\n\r\n        // Find the item with the lowest ID among the matching items\r\n        var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n\r\n        // Update a virtual tag to indicate a change in status\r\n        this.Ets.Api.Tags.UpdateVirtualTagByID(562, \"RED\", uow).ThrowIfFailed();\r\n\r\n        if (itemWithLowestID != null)\r\n        {\r\n          // Update the location of the matched item to the production area\r\n          itemWithLowestID.LocationID = 1;\r\n\r\n          // Save the updated item information to the database\r\n          api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n\r\n          // Create a log entry for the item's movement to production\r\n          ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n          // Populate the log entry details\r\n          itemLog.User = this.Ets.User.Login;\r\n          itemLog.ItemLogDefinitionID = 2;\r\n          itemLog.LogDateTime = this.Ets.SiteNow;\r\n          itemLog.Lot = itemWithLowestID.Lot;\r\n          itemLog.ItemID = itemWithLowestID.ID;\r\n          itemLog.MaterialID = 3;\r\n          itemLog.Quantity = 1;\r\n          itemLog.LocationID = 1;\r\n          itemLog.JobID = JobID;\r\n          //itemLog.SubLot = itemWithLowestID.Lot;\r\n          itemLog.Notes = \"Moved to production\";\r\n\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result;\r\n\r\n          // Insert the log entry into the database\r\n          result = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n        }\r\n      }\r\n\r\n      // Check if the job's associated product is of type \"cod\"\r\n      if (_job.ProductID == 2)\r\n      {\r\n        // Load the material information for the specific product type\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(2).ThrowIfLoadFailed(\"ID\", _job.ProductID);\r\n\r\n        // Define a list of location IDs to consider\r\n        List<int> locationIDsToCheck = new List<int> { 7, 8, 9, 10, 11, 12, 13, 14, 15 };\r\n\r\n        // Find the items that match the MaterialID and LocationIDs in the items list\r\n        var matchingItems = items.Where(i => i.MaterialID == _material.ID && locationIDsToCheck.Contains(i.LocationID));\r\n\r\n        // Find the item with the lowest ID among the matching items\r\n        var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n\r\n        // Update a virtual tag to indicate a change in status (WHITE color)\r\n        this.Ets.Api.Tags.UpdateVirtualTagByID(562, \"WHITE\", uow).ThrowIfFailed();\r\n\r\n\r\n        if (itemWithLowestID != null)\r\n        {\r\n          // Update the location of the matched item to the production area\r\n          itemWithLowestID.LocationID = 1;\r\n\r\n          // Save the updated item information to the database\r\n          api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n\r\n          // Create a log entry for the item's movement to production\r\n          ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n          // Populate the log entry details\r\n          itemLog.User = this.Ets.User.Login;\r\n          itemLog.ItemLogDefinitionID = 2;\r\n          itemLog.LogDateTime = this.Ets.SiteNow;\r\n          itemLog.Lot = itemWithLowestID.Lot;\r\n          itemLog.ItemID = itemWithLowestID.ID;\r\n          itemLog.MaterialID = 2;\r\n          itemLog.Quantity = 1;\r\n          itemLog.LocationID = 1;\r\n          itemLog.JobID = JobID;\r\n\r\n          itemLog.Notes = \"Moved to production\";\r\n\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result;\r\n\r\n          // Insert the log entry into the database\r\n          result = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n\r\n        }\r\n      }\r\n\r\n      // Check if the job's associated product is of type \"trout\"\r\n      if (_job.ProductID == 3)\r\n      {\r\n        // Load the material information for the specific product type\r\n        _material = this.Ets.Api.Data.DbMaterial.Load.ByID(1).ThrowIfLoadFailed(\"ID\", _job.ProductID);\r\n\r\n        // Define a list of location IDs to consider\r\n        List<int> locationIDsToCheck = new List<int> { 7, 8, 9, 10, 11, 12, 13, 14, 15 };\r\n\r\n        // Find the items that match the MaterialID and LocationIDs in the items list\r\n        var matchingItems = items.Where(i => i.MaterialID == _material.ID && locationIDsToCheck.Contains(i.LocationID));\r\n\r\n        // Find the item with the lowest ID among the matching items\r\n        var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n\r\n        // Update a virtual tag to indicate a change in status (BLUE color)\r\n        this.Ets.Api.Tags.UpdateVirtualTagByID(562, \"BLUE\", uow).ThrowIfFailed();\r\n\r\n\r\n        if (itemWithLowestID != null)\r\n        {\r\n          // Update the location of the matched item to the production area\r\n          itemWithLowestID.LocationID = 1;\r\n\r\n          // Save the updated item information to the database\r\n          api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n\r\n          // Create a log entry for the item's movement to production\r\n          ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n          // Populate the log entry details\r\n          itemLog.User = this.Ets.User.Login;\r\n          itemLog.ItemLogDefinitionID = 2;\r\n          itemLog.LogDateTime = this.Ets.SiteNow;\r\n          itemLog.Lot = itemWithLowestID.Lot;\r\n          itemLog.ItemID = itemWithLowestID.ID;\r\n          itemLog.MaterialID = 1;\r\n          itemLog.Quantity = 1;\r\n          itemLog.LocationID = 1;\r\n          itemLog.JobID = JobID;\r\n          itemLog.Notes = \"Moved to production\";\r\n\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result;\r\n\r\n          // Insert the log entry into the database\r\n          result = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n\r\n        }\r\n      }\r\n\r\n      // update all the needed tags so that a job wil start\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(28, 1, uow).ThrowIfFailed();\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(29, product.Name, uow).ThrowIfFailed();\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(26, _job.Name + \"-1\", uow).ThrowIfFailed();\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(27, _job.Name, uow).ThrowIfFailed();\r\n      this.Ets.Api.Tags.UpdateVirtualTagByID(139, 1, uow).ThrowIfFailed();\r\n      Trace.Write(\"Tags have been changed.\");\r\n\r\n      uow.ExecuteReturnsResultObject().ThrowIfFailed();\r\n\r\n      var url = \"http://10.19.10.4/TS/pages/home/batching/plannedprodjobs/jobstart\";\r\n      this.Ets.Pages.RedirectToUrl(url);\r\n    }\r\n\r\n  }\r\n\r\n  // ***********************************************************\r\n\r\n  // ***********************************************************\r\n\r\n}",
  "ContentPageParameters": "",
  "ContentData": "",
  "ContentJs": "\r\n\r\n\r\n\r\n",
  "ContentCss": "\r\n"
}