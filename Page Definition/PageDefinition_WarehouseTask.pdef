{
  "TrakSYS_Version": "12.0.0",
  "Name": "Complete Tasks",
  "AltName": "",
  "Description": "",
  "Notes": "",
  "Key": "WarehouseTask",
  "IconCss": "",
  "NavigationIconCss": "bi-check-circle-fill",
  "NavigationTitle": "",
  "PageTitle": "",
  "RefreshSeconds": 0,
  "RefreshKeysEx": "",
  "IsHeaderVisible": 2,
  "IsTitleVisible": 2,
  "IsBreadcrumbsVisible": 2,
  "SidebarMode": 2,
  "CssMode": 1,
  "IsSpokesVisible": 2,
  "IsVisibleInNavigation": true,
  "InstanceType": 0,
  "InstanceScript": "",
  "ValueScript": "",
  "Css": "",
  "Js": "",
  "ContentMode": 0,
  "ContentKey": "",
  "ContentView": "<Content><Row ID=\"R1\"><Col ID=\"R1C1\" Width=\"4\" CssClassExtra=\"\" CardMode=\"3\" CardModeKey=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Row ID=\"R1C1R1\"><Col ID=\"R1C1R1C1\" Width=\"12\" CssClassExtra=\"\" CardMode=\"1\" CardModeKey=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Part ID=\"ChosenTask\" Key=\"ETS.Filters.TsFilterDropDown\" ContentPropertiesInitOrder=\"3\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Select task to complete\"\r\n  },\r\n  \"TargetKeySelectedValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"TaskValue\"\r\n  },\r\n  \"SelectedValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"3\"\r\n  },\r\n  \"TargetKeyAdditionalValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"IsReadOnly\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 12\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"ExtraOption\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"ExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"1\"\r\n  },\r\n  \"AdditionalExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"AutoRefresh\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"AutoRefreshSplashMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CssClassExtraInput\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.TaskDefinition\"\r\n  },\r\n  \"DataValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{ID}\"\r\n  },\r\n  \"DataTextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Name}\"\r\n  },\r\n  \"DataAdditionalValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  }\r\n}]]></Parameters></Part></Col></Row><Row ID=\"R1C1R2\" CssClassExtra=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" IsFillHeight=\"True\"><Col ID=\"R1C1R2C1\" Width=\"12\" CssClassExtra=\"\" CardMode=\"2\" CardModeKey=\"\" ShownInXs=\"True\" ShownInSm=\"True\" ShownInMd=\"True\" ShownInLg=\"True\" ShownInXl=\"True\" ShownInXxl=\"True\" WidthBsInXs=\"\" WidthBsInSm=\"\" WidthBsInMd=\"\" WidthBsInLg=\"\" WidthBsInXl=\"\" WidthBsInXxl=\"\"><Part ID=\"CompleteHeader\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Complete the following:\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Header0\" Key=\"ETS.TsHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"No tasks selected\"\r\n  },\r\n  \"Height\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoShow\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Div0\" Key=\"ETS.TsDiv\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 20\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"DataDashJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Input1\" Key=\"ETS.Forms.TsInputCheckList\" ContentPropertiesInitOrder=\"6\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CaptionSubEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"FormKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.FormItems\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 8\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"CssClassExtraInput\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"IsSelectAllButtonsVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.TaskFormItems\"\r\n  },\r\n  \"DataValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{ID}\"\r\n  },\r\n  \"DataTextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Name}\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"HeaderSub0\" Key=\"ETS.TsSubHeader\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Description\"\r\n  },\r\n  \"IconCss\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"P0\" Key=\"ETS.TsParagraph\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Data.TaskFormItems.Selected.Description}\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Div1\" Key=\"ETS.TsDiv\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 20\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"DataDashJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Input0\" Key=\"ETS.Forms.TsInputDropDown\" ContentPropertiesInitOrder=\"6\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Caption\"\r\n  },\r\n  \"CaptionSubEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"FormKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Model.Case\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 10\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ExtraOption\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"ExtraOptionValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"-1\"\r\n  },\r\n  \"AutoPostBack\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"AutoPostBackSplashMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CssClassExtraInput\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SourceDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.Choice\"\r\n  },\r\n  \"DataValueEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{id}\"\r\n  },\r\n  \"DataTextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"{Name}\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Caption\" Key=\"ETS.Forms.TsInputText\" ContentPropertiesInitOrder=\"6\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Additional Notes\"\r\n  },\r\n  \"CaptionSubEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"FormKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Model.Case\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 10\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"IsMultiLine\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"MultiLineRows\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"PlaceholderEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Caption\"\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"VariantDataType\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AutoCorrectMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AutoComplete\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"CssClassExtraInput\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Notes\" Key=\"ETS.Forms.TsInputText\" ContentPropertiesInitOrder=\"6\"><Parameters><![CDATA[{\r\n  \"CaptionEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Additional notes\"\r\n  },\r\n  \"CaptionSubEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"FormKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Model.Notes\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"LayoutMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 1\r\n  },\r\n  \"TotalWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 10\r\n  },\r\n  \"LabelWidthBs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"IsMultiLine\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"MultiLineRows\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 4\r\n  },\r\n  \"PlaceholderEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Notes\"\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"VariantDataType\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AutoCorrectMode\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"AutoComplete\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"CssClassExtraInput\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Div2\" Key=\"ETS.TsDiv\"><Parameters><![CDATA[{\r\n  \"TextEx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"HeightPx\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 100\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"DataDashJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part><Part ID=\"Buttons0\" Key=\"ETS.Forms.TsFormButtons\"><Parameters><![CDATA[{\r\n  \"DefaultFormButtonKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Save\"\r\n  },\r\n  \"LeftItemJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Key\\\": \\\"Save\\\",\\r\\n    \\\"CaptionEx\\\": \\\"resx:Caption.Complete Task, Ts.Core\\\",\\r\\n    \\\"ToolTipEx\\\": \\\"\\\",\\r\\n    \\\"ButtonTypeCssEx\\\": \\\"btn-primary\\\",\\r\\n    \\\"EnabledEx\\\": \\\"\\\",\\r\\n    \\\"VisibleEx\\\": \\\"\\\",\\r\\n    \\\"IsPopupMenu\\\": false,\\r\\n    \\\"IconCssEx\\\": \\\"\\\",\\r\\n    \\\"PickerTypeLinkButton\\\": \\\"\\\",\\r\\n    \\\"UrlEx\\\": \\\"\\\",\\r\\n    \\\"OnClientClickEx\\\": \\\"\\\",\\r\\n    \\\"OnServerClick\\\": \\\"Add\\\",\\r\\n    \\\"ConfirmEnabled\\\": false,\\r\\n    \\\"ConfirmCaptionEx\\\": \\\"\\\",\\r\\n    \\\"ConfirmMessageEx\\\": \\\"\\\",\\r\\n    \\\"WindowTargetEx\\\": \\\"\\\",\\r\\n    \\\"SplashMode\\\": 0\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"RightItemJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"Data.TaskFormItems.DoNotShow\",\r\n    \"Value\": true\r\n  },\r\n  \"StickyBottom\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXxl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXl\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInLg\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInMd\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInSm\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ShownInXs\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  }\r\n}]]></Parameters></Part></Col></Row></Col></Row><Row ID=\"R2\"><Col ID=\"R2C1\" Width=\"3\"><Part ID=\"DataTaskDefinition\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"1\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT tfg.ID, tfg.Name\\r\\nFROM tTaskFormItemGroup AS tfg\\r\\nJOIN tTaskFormItem AS tfi ON tfg.ID = tfi.TaskFormItemGroupID\\r\\nWHERE tfg.ID >= 3\\r\\nAND tfg.Name NOT LIKE '%PM%'\\r\\nAND tfg.Name NOT LIKE '%RM%'\\r\\nUNION\\r\\nSELECT tfg.ID, tfg.Name\\r\\nFROM tTaskFormItemGroup AS tfg\\r\\nWHERE tfg.ID = 1\\r\\n\\r\\n\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.TaskDefinition\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></Col><Col ID=\"R2C2\" Width=\"3\"><Part ID=\"TaskFormItem\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"5\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Name\\\": \\\"TaskValue\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"-1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"TaskValue\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT ID\\r\\n      ,Name\\r\\n      ,TaskFormItemGroupID,\\r\\n       Description\\r\\nFROM tTaskFormItem\\r\\nWHERE @TaskValue = TaskFormItemGroupID\\r\\nAND Name NOT LIKE '%Condition%';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.TaskFormItems\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></Col><Col ID=\"R2C3\" Width=\"3\"><Part ID=\"Data0\" Key=\"ETS.DataTables.TsDataTableCustomSql\" ContentPropertiesInitOrder=\"5\"><Parameters><![CDATA[{\r\n  \"SqlParametersJson\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"[\\r\\n  {\\r\\n    \\\"Name\\\": \\\"TaskValue\\\",\\r\\n    \\\"SqlDataType\\\": \\\"int\\\",\\r\\n    \\\"DefaultValue\\\": \\\"-1\\\",\\r\\n    \\\"ValuesKey\\\": \\\"TaskValue\\\"\\r\\n  }\\r\\n]\"\r\n  },\r\n  \"Sql\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"SELECT id\\r\\n      ,Name\\r\\n      ,TaskFormItemGroupID\\r\\nFROM t_choice\\r\\nWHERE @TaskValue = TaskFormItemGroupID\"\r\n  },\r\n  \"CssClassExtra\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"Visible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"Enabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"ContentIsSqlVisible\": {\r\n    \"Key\": \"trace\",\r\n    \"Value\": false\r\n  },\r\n  \"ContentIsTableVisible\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"TargetDataKey\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"Data.Choice\"\r\n  },\r\n  \"CacheSeconds\": {\r\n    \"Key\": \"\",\r\n    \"Value\": 0\r\n  },\r\n  \"CacheDependencies\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedWhenField\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"SelectedEqualsValue\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"ShouldAutoSelectedFirstRow\": {\r\n    \"Key\": \"\",\r\n    \"Value\": true\r\n  },\r\n  \"PagingEnabled\": {\r\n    \"Key\": \"\",\r\n    \"Value\": false\r\n  },\r\n  \"SourceConnectionString\": {\r\n    \"Key\": \"\",\r\n    \"Value\": \"\"\r\n  },\r\n  \"CommandTimeout\": {\r\n    \"Key\": \"\",\r\n    \"Value\": -1\r\n  }\r\n}]]></Parameters></Part></Col></Row></Content>",
  "ContentCode": "using System;\r\nusing System.Collections.Generic;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing System.Web.ModelBinding;\r\nusing ETS.Core.Api;\r\nusing ETS.Core.Api.Models;\r\nusing ETS.Core.Api.Models.Data;\r\nusing ETS.Core.Enums;\r\nusing ETS.Core.Extensions;\r\nusing ETS.Core.Scripting;\r\nusing ETS.Core.Services.Resource;\r\nusing ETS.Ts.Core.ContentParts;\r\nusing ETS.Ts.Core.Enums;\r\nusing ETS.Ts.Core.Scripting;\r\nusing ETS.Core.Api.Models.Tasks;\r\n\r\nnamespace ETS.Ts.Content\r\n{\r\n  /// ***********************************************************\r\n  public partial class WarehouseTask : ContentPageBase\r\n  {\r\n    public int taskFormItemID { get; set; }\r\n    /// Automatically map the decorated property to incoming Ets.Values data (typically QueryString variables).\r\n    /// The name of the property is used as the Key in accessing the Ets.Values collection during mapping.\r\n    //[ValuesProperty()]\r\n    //public int SystemID { get; set; } = -1;\r\n\r\n    public int taskFormItemGroupID { get; set; }\r\n    public string jobName;\r\n\r\n    /// ***********************************************************\r\n    /// <remarks>\r\n    /// All Page level ContentProperties have been set from default\r\n    /// values or Ets.Values. Content Parts are not yet loaded/initialized.\r\n    ///\r\n    /// Do things like:\r\n    ///   Check Page Permissions\r\n    ///   Set Resource Strings\r\n    /// </remarks>\r\n    /// ***********************************************************\r\n    protected override bool ContentPage_Init()\r\n    {\r\n     \r\n      \t\r\n\r\n      return true;\r\n    }\r\n\r\n    /// ***********************************************************\r\n    /// <remarks>\r\n    /// Content Parts with InitOrder 1 have been loaded/initialized.\r\n    /// Called just before Content Parts with InitOrder = 2\r\n    /// are loaded/initialized (typically Filter parts).\r\n    ///\r\n    /// Do things like:\r\n    ///   Read from Ets.Values\r\n    ///   Update Ets.Values (with data for Parts about to be loaded/initialized)\r\n    ///\r\n    /// Do not:\r\n    ///   Directly manipulate Content Part Properties\r\n    /// </remarks>\r\n    /// ***********************************************************\r\n    protected override bool ContentPage_PartPreInit02()\r\n    {\r\n \r\n\r\n      return true;\r\n    }\r\n\r\n    /// ***********************************************************\r\n    /// <remarks>\r\n    /// Content Parts with InitOrder 1-4 have been loaded/initialized.\r\n    /// Called just before Content Parts with InitOrder = 5\r\n    /// are loaded/initialized (typically Data Table parts).\r\n    ///\r\n    /// Do things like:\r\n    ///   Read from Ets.Values\r\n    ///   Update Ets.Values (with data for Parts about to be loaded/initialized)\r\n    ///\r\n    /// Do not:\r\n    ///   Directly manipulate Content Part Properties\r\n    /// </remarks>\r\n    /// ***********************************************************\r\n    protected override bool ContentPage_PartPreInit05()\r\n    {\r\nthis.Page.Trace.IsEnabled = true;\r\n      string task_String = this.Ets.Values[\"TaskValue\"].ToString();\r\n      if(task_String == \"1\"){\r\n        this.Ets.Values[\"Data.TaskFormItems.DoNotShow\"] = false;\r\n        this.Ets.Values[\"Data.TaskFormItems.DoShow\"] = true;\r\n      }\r\n      else{\r\n        this.Ets.Values[\"Data.TaskFormItems.DoNotShow\"] = true;\r\n        this.Ets.Values[\"Data.TaskFormItems.DoShow\"] = false;\r\n      }\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n    /// ***********************************************************\r\n    /// <remarks>\r\n    /// Content Parts with InitOrder 1-9 have been loaded/initialized.\r\n    /// Called just before Content Parts with InitOrder = 10\r\n    /// are loaded/initialized (typically all other Content Parts).\r\n    ///\r\n    /// Do things like:\r\n    ///   Read from Ets.Values\r\n    ///   Update Ets.Values (with data for Parts about to be loaded/initialized)\r\n    ///\r\n    /// Do not:\r\n    ///   Directly manipulate Content Part Properties\r\n    /// </remarks>\r\n    /// ***********************************************************\r\n\r\n    private int Convert(int value)\r\n    {\r\n      switch (value)\r\n      {\r\n        case 3:\r\n          value = 1;\r\n          return value;\r\n        case 8:\r\n          value = 2;\r\n          return value;\r\n        case 4:\r\n          value = 3;\r\n          return value;\r\n        case 5:\r\n          value = 4;\r\n          return value;\r\n        case 6:\r\n          value = 5;\r\n          return value;\r\n        case 7:\r\n          value = 6;\r\n          return value;\r\n        default:\r\n          return value;\r\n      }\r\n    }\r\n\r\n    protected override bool ContentPage_PartPreInit10()\r\n    {\r\n\r\n      //Get instance of api service\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n\r\n      string taskFormItemGroupID_String = this.Ets.Values[\"Data.TaskFormItems.Selected.TaskFormItemGroupID\"].ToString();\r\n      string taskFormItemID_String = this.Ets.Values[\"Data.TaskFormItems.Selected.ID\"].ToString();\r\n      jobName = this.Ets.Values[\"Data.TaskFormItems.Selected.Name\"].ToString();\r\n      \r\n      taskFormItemGroupID = Int32.Parse(taskFormItemGroupID_String);\r\n      taskFormItemID = Int32.Parse(taskFormItemID_String);\r\n\r\n      int taskDefinitionID = Convert(taskFormItemGroupID);\r\n\r\n      string vgr = \"~/library/root/MaintenanceItems/PmVGRThumb.png\";\r\n      string vgr_Url = \"~/library/root/MaintenanceItems/PmVGR.pdf\";\r\n      string cutter = \"~/library/root/MaintenanceItems/PmCutterThumb.png\";\r\n      string cutter_Url = \"~/library/root/MaintenanceItems/PmCutter.pdf\";\r\n      string oven = \"~/library/root/MaintenanceItems/PmOvenThumb.png\";\r\n\r\n      switch (taskDefinitionID)\r\n      {\r\n        case 1:\r\n          this.Ets.Values[\"Sop.Thumb\"] = vgr;\r\n          this.Ets.Values[\"Sop.Tip\"] = \"VGR\";\r\n          this.Ets.Values[\"Sop.Url\"] = vgr_Url;\r\n          break;\r\n        case 3:\r\n          this.Ets.Values[\"Sop.Thumb\"] = cutter;\r\n          this.Ets.Values[\"Sop.Tip\"] = \"Cutter\";\r\n          this.Ets.Values[\"Sop.Url\"] = cutter_Url;\r\n          break;\r\n        case 4:\r\n          this.Ets.Values[\"Sop.Thumb\"] = oven;\r\n          this.Ets.Values[\"Sop.Tip\"] = \"Oven\";\r\n          break;\r\n        default:\r\n          this.Ets.Values[\"Sop.Thumb\"] = \"\";\r\n          this.Ets.Values[\"Sop.Tip\"] = \"No Instructions\";\r\n          break;\r\n      }\r\n\r\n      return true;\r\n    }\r\n    public void UpdateTaskUserState(List<ETS.Core.Api.Models.Data.DbTask> tasks, int taskDefinitionID)\r\n    {\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n      foreach (var task in tasks)\r\n      {\r\n        if (task.TaskDefinitionID == taskDefinitionID)\r\n        {\r\n          task.UserState = 1;\r\n          ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbTask> result;\r\n\r\n          result = api.Data.DbTask.Save.UpdateExisting(task);\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    private void Add(object sender, EventArgs e)\r\n    {\r\n\r\n      var uow = this.Ets.Api.CreateUnitOfWork();\r\n      //Get instance of api service\r\n      var api = ETS.Core.Api.ApiService.GetInstance();\r\n       \r\n      // var uTask12 =   api.Util.Db.ExecuteScalar<int>($\"UPDATE t_maintTasks SET UserState = 1 WHERE JobName = '{jobName}'\");\r\n      // Create a model object to populate\r\n      ETS.Core.Api.Models.Data.DbJournal journal = new ETS.Core.Api.Models.Data.DbJournal();\r\n\r\n      // Receives the last id from the table that is chosen + 1 or any other values that is preferred.\r\n      var maxIDFromTjournal = this.Ets.Api.Util.Db.ExecuteScalar<int>(@\"SELECT MAX(ID) FROM tJournal;\").Return + 1;\r\n\r\n      // Populate the model object as needed\r\n      journal.ID = maxIDFromTjournal;\r\n      journal.JournalCategoryID = this.Ets.Form.UpdateModelValueByFormKey(\"Model.JournalCategory\", journal.JournalCategoryID, \"Journal Category\");\r\n      journal.Case = this.Ets.Form.UpdateModelValueByFormKey(\"Model.Case\", journal.Case, \"Journal Case\");\r\n      // journal.Measure = this.Ets.Form.UpdateModelValueByFormKey(\"Model.Measure\", journal.Measure, \"Journal Measure\");\r\n      journal.Notes = this.Ets.Form.UpdateModelValueByFormKey(\"Model.Notes\", journal.Notes, \"Journal Notes\");\r\n      journal.User = this.Ets.User.Login;\r\n      journal.SystemID = this.Ets.Form.UpdateModelValueByFormKey(\"TaskValue\", journal.SystemID, \"Journal System\");\r\n      journal.AreaID = 4;\r\n      journal.JournalDateTime = DateTime.Now;\r\n      journal.Capture01 = \"WH\";\r\n      // create a result object to determine the success of the operation\r\n      ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbJournal> result;\r\n\r\n      // Here we insert the entity in the database (The ID will be created when inserted to the database)\r\n      result = api.Data.DbJournal.Save.InsertAsNew(journal);\r\n\r\n      // new test script\r\n      List<ETS.Core.Api.Models.Data.DbTask> tasks = new List<ETS.Core.Api.Models.Data.DbTask>();\r\n      tasks = api.Data.ListOf.DbTasks.GetList.WithSql(\"SELECT * FROM tTask\");\r\n      var url = this.Ets.Pages.PageUrl;\r\n\r\n      switch (taskFormItemID)\r\n      {\r\n        case 1:\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(588, 0, uow);\r\n          uow.ExecuteReturnsResultObject().ThrowIfFailed();\r\n          UpdateTaskUserState(tasks, 1);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 4:\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(588, 0, uow);\r\n          uow.ExecuteReturnsResultObject().ThrowIfFailed();\r\n          UpdateTaskUserState(tasks, 3);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 6:\r\n          UpdateTaskUserState(tasks, 4);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 7:\r\n          UpdateTaskUserState(tasks, 5);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 9:\r\n          UpdateTaskUserState(tasks, 6);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 16:\r\n          UpdateTaskUserState(tasks, 10);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 19:\r\n          UpdateTaskUserState(tasks, 9);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 20:\r\n          UpdateTaskUserState(tasks, 8);\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        case 15:\r\n        UpdateTaskUserState(tasks, 2);\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(432, 0, uow);\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(433, 0, uow);\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(592, 0, uow);\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(417, 0, uow);\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(416, 0, uow);\r\n          this.Ets.Api.Tags.UpdateVirtualTagByID(413, 0, uow);\r\n          uow.ExecuteReturnsResultObject().ThrowIfFailed();\r\n\r\n          List<ETS.Core.Api.Models.Data.DbItem> items = new List<ETS.Core.Api.Models.Data.DbItem>();\r\n\r\n          // Load the list of items from the database\r\n          items = api.Data.ListOf.DbItems.GetList.WithSql(\"SELECT * FROM tItem\");\r\n\r\n          // Find the items that match the MaterialID and LocationIDs in items list\r\n          int locationIDsToCheck = 20;\r\n          var matchingItems = items.Where(i => locationIDsToCheck == i.LocationID);\r\n\r\n          // Find the item with the lowest ID among the matching items\r\n          var itemWithLowestID = matchingItems.OrderBy(i => i.ID).FirstOrDefault();\r\n          if (itemWithLowestID != null)\r\n          {\r\n\r\n            itemWithLowestID.LocationID = 21;\r\n\r\n            api.Data.DbItem.Save.UpdateExisting(itemWithLowestID);\r\n            ETS.Core.Api.Models.Data.DbItemLog itemLog = new ETS.Core.Api.Models.Data.DbItemLog();\r\n\r\n            itemLog.User = this.Ets.User.Login;\r\n            itemLog.ItemLogDefinitionID = 5;\r\n            itemLog.LogDateTime = this.Ets.SiteNow;\r\n            itemLog.Lot = itemWithLowestID.Lot;\r\n            itemLog.ItemID = itemWithLowestID.ID;\r\n            itemLog.Quantity = 1;\r\n            itemLog.LocationID = 21;\r\n            itemLog.JobID = itemWithLowestID.JobID;\r\n            itemLog.SubLot = itemWithLowestID.Lot;\r\n            itemLog.Notes = \"Picked up by customer\";\r\n            itemLog.Capture10 = itemWithLowestID.Attribute10;\r\n            if (itemWithLowestID.MaterialID == 1)\r\n            {\r\n              itemLog.ProductID = 9;\r\n            }\r\n            if (itemWithLowestID.MaterialID == 2)\r\n            {\r\n              itemLog.ProductID = 10;\r\n            }\r\n            if (itemWithLowestID.MaterialID == 3)\r\n            {\r\n              itemLog.ProductID = 8;\r\n            }\r\n\r\n            ETS.Core.Api.Models.Result<ETS.Core.Api.Models.Data.DbItemLog> result2;\r\n\r\n            result2 = api.Data.DbItemLog.Save.InsertAsNew(itemLog);\r\n\r\n            this.Ets.Pages.RedirectToUrl(url);\r\n          }\r\n          //UpdateTaskUserState(tasks, 2);\r\n          break;\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n\r\n        // Add more cases if needed for other values of taskFormItemID\r\n        // case otherValue:\r\n        //     // Do something for otherValue\r\n        //     break;\r\n        default:\r\n          // Code to execute if taskFormItemID doesn't match any of the cases\r\n          break;\r\n\r\n          if (result.Success)\r\n          {\r\n            int newID = result.Return.ID;\r\n          }\r\n          else\r\n          {\r\n            return;\r\n          }\r\n\r\n          var url3 = this.Ets.Pages.PageUrl;\r\n          this.Ets.Pages.RedirectToUrl(url3);\r\n\r\n      }\r\n     var uTask12 =   api.Util.Db.ExecuteScalar<int>($\"UPDATE t_maintTasks SET UserState = 1 WHERE TaskFormItemGroupID IN ('{taskFormItemGroupID}');\");\r\n      switch (taskFormItemGroupID)\r\n      {\r\n        //oven rm Data.TaskFormItems.Selected.Name\r\n        case 12:\r\n          var taskID12 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n         this.Ets.Pages.RedirectToUrl(url);\r\n          \r\n          break;\r\n        //roator rm\r\n        case 13:\r\n          var taskID13 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        //slicer rm\r\n        case 14:\r\n          var taskID14 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        //d and pu station rm\r\n        case 15:\r\n          var taskID15 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        //hbw rm\r\n        case 16:\r\n          var taskID16 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        //fpw rm\r\n        case 17:\r\n          var taskID17 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n        //packaging line rm\r\n        case 18:\r\n          var taskID18 = api.Util.Db.ExecuteScalar<int>(\"DELETE FROM tTaskFormItem WHERE [TaskFormItemGroupID] IN (\" + taskFormItemGroupID + \");\");\r\n          this.Ets.Pages.RedirectToUrl(url);\r\n          break;\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    /// ***********************************************************\r\n    /// <remarks>\r\n    /// All Content Parts have been loaded/initialized.\r\n    ///\r\n    /// At this point, adding or changing Ets.Values data will no\r\n    /// longer serve a purpose as all Content Parts have accessed\r\n    /// what they require.\r\n    /// </remarks>\r\n    /// ***********************************************************\r\n    protected override bool ContentPage_Final()\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n}",
  "ContentPageParameters": "",
  "ContentData": "",
  "ContentJs": "",
  "ContentCss": ""
}